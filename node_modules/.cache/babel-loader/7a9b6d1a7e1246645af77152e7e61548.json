{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ciner\\\\Documents\\\\GitHub\\\\Streaming-Site\\\\WebApp\\\\src\\\\settings\\\\Settings.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Settings() {\n  _s();\n\n  const [featured, setFeatured] = useState([]);\n  const [genre, setGenre] = useState('');\n  const [aniData, setAniData] = useState([{}]);\n  useEffect(() => {\n    // Query and store genres\n    async function getLists() {\n      async function fetchList() {\n        try {\n          const response = await fetch(`http://localhost:1337/api/featured`, {\n            method: 'GET'\n          });\n          const mylist = await response.json(); // console.log(mylist)\n\n          return mylist;\n        } catch (error) {\n          console.error(error);\n        }\n      }\n\n      const featuredList = await fetchList(\"Comedy\");\n      setFeatured(featuredList);\n    }\n\n    async function fetchAniData() {\n      console.log(featured);\n      const aniId = '28735';\n\n      try {\n        const response = await fetch('http://localhost:1337/api/anime', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            aniId\n          })\n        });\n        const mylist = await response.json();\n        console.log(mylist);\n        return mylist;\n      } catch (error) {\n        console.log('ERROR');\n        console.error(error);\n      }\n    }\n\n    getLists();\n    fetchAniData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"fuck this \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n} // const [action, setAction] = useState([])\n// const [drama, setDrama] = useState([])\n// const [adventure, setAdventure] = useState([])\n// const [comedy, setComedy] = useState([])\n// const [sports, setSports] = useState([])\n// const [movies, setMovies] = useState([])\n// async function fetchList() \n// {\n//     try \n//     {\n//         const response = await fetch(`http://localhost:1337/api/action`, \n//         {\n//             method: 'GET'\n//         });\n//         const mylist = await response.json();\n//         return mylist;\n//     } \n//     catch (error) \n//     {\n//         console.error(error);\n//     }\n// }\n// useEffect(() => {\n//     async function getList() \n//     {\n//         const mylist = await fetchList();\n//         setAction(mylist);\n//         return mylist; \n//     }\n//     getList()\n// }, [action])\n// console.log(action)\n// fetch('http://localhost:1337/api/action')\n//     .then(res => res.json())\n//     .then(data => console.log(data))\n//     .catch(error => console.log('ERROR'))\n// async function fetchList() \n// {\n//     try \n//     {\n//         const response = await fetch(`http://localhost:1337/api/action`, \n//         {\n//             method: 'GET'\n//         });\n//         const mylist = await response.json();\n//         return mylist;\n//     } \n//     catch (error) \n//     {\n//         console.error(error);\n//     }\n// }\n// async function getList() \n// {\n//     const mylist = await fetchList();\n//     return mylist \n// }\n// console.log(action)\n\n_s(Settings, \"xSkC1l6UfxhYsb2+Z7aUPqv2lM0=\");\n\n_c = Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useEffect","useState","Settings","featured","setFeatured","genre","setGenre","aniData","setAniData","getLists","fetchList","response","fetch","method","mylist","json","error","console","featuredList","fetchAniData","log","aniId","headers","body","JSON","stringify"],"sources":["C:/Users/Ciner/Documents/GitHub/Streaming-Site/WebApp/src/settings/Settings.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\nexport default function Settings() {\r\n\r\n  const [featured, setFeatured] = useState([])\r\n  const [genre, setGenre] = useState('')\r\n  const [aniData, setAniData] = useState([{}])\r\n\r\n  useEffect(() => {\r\n\r\n    // Query and store genres\r\n      async function getLists() \r\n      {\r\n        async function fetchList() \r\n        {\r\n            try {\r\n                const response = await fetch(`http://localhost:1337/api/featured`, {\r\n                  method: 'GET',\r\n                  \r\n                });\r\n                const mylist = await response.json();\r\n                // console.log(mylist)\r\n                return mylist;\r\n            } \r\n            catch (error) {console.error(error);}\r\n        }\r\n\r\n          const featuredList = await fetchList(\"Comedy\");\r\n          setFeatured(featuredList);\r\n\r\n      }\r\n\r\n      async function fetchAniData() \r\n      {\r\n        console.log(featured)\r\n        const aniId = '28735'\r\n          try \r\n          {\r\n            const response = await fetch('http://localhost:1337/api/anime', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify({\r\n                aniId,\r\n              }),\r\n            });\r\n    \r\n            const mylist = await response.json();\r\n            console.log(mylist)\r\n            return mylist;\r\n          } \r\n          catch (error) \r\n          {\r\n              console.log('ERROR')\r\n              console.error(error);\r\n          }\r\n      }\r\n\r\n      getLists()\r\n      fetchAniData() \r\n\r\n  }, [])\r\n    return (\r\n    <h1>fuck this </h1>\r\n  )\r\n}\r\n\r\n    // const [action, setAction] = useState([])\r\n    // const [drama, setDrama] = useState([])\r\n    // const [adventure, setAdventure] = useState([])\r\n    // const [comedy, setComedy] = useState([])\r\n    // const [sports, setSports] = useState([])\r\n    // const [movies, setMovies] = useState([])\r\n\r\n    // async function fetchList() \r\n    // {\r\n    //     try \r\n    //     {\r\n    //         const response = await fetch(`http://localhost:1337/api/action`, \r\n    //         {\r\n    //             method: 'GET'\r\n    //         });\r\n    //         const mylist = await response.json();\r\n    //         return mylist;\r\n    //     } \r\n    //     catch (error) \r\n    //     {\r\n    //         console.error(error);\r\n    //     }\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     async function getList() \r\n    //     {\r\n    //         const mylist = await fetchList();\r\n    //         setAction(mylist);\r\n    //         return mylist; \r\n    //     }\r\n\r\n    //     getList()\r\n    // }, [action])\r\n\r\n    // console.log(action)\r\n\r\n    // fetch('http://localhost:1337/api/action')\r\n    //     .then(res => res.json())\r\n    //     .then(data => console.log(data))\r\n    //     .catch(error => console.log('ERROR'))\r\n\r\n    // async function fetchList() \r\n    // {\r\n    //     try \r\n    //     {\r\n    //         const response = await fetch(`http://localhost:1337/api/action`, \r\n    //         {\r\n    //             method: 'GET'\r\n    //         });\r\n    //         const mylist = await response.json();\r\n    //         return mylist;\r\n    //     } \r\n    //     catch (error) \r\n    //     {\r\n    //         console.error(error);\r\n    //     }\r\n    // }\r\n\r\n    // async function getList() \r\n    // {\r\n    //     const mylist = await fetchList();\r\n    //     return mylist \r\n    // }\r\n\r\n    \r\n    // console.log(action)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAIA,eAAe,SAASC,QAAT,GAAoB;EAAA;;EAEjC,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAtC;EAEAD,SAAS,CAAC,MAAM;IAEd;IACE,eAAeS,QAAf,GACA;MACE,eAAeC,SAAf,GACA;QACI,IAAI;UACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oCAAF,EAAuC;YACjEC,MAAM,EAAE;UADyD,CAAvC,CAA5B;UAIA,MAAMC,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAArB,CALA,CAMA;;UACA,OAAOD,MAAP;QACH,CARD,CASA,OAAOE,KAAP,EAAc;UAACC,OAAO,CAACD,KAAR,CAAcA,KAAd;QAAsB;MACxC;;MAEC,MAAME,YAAY,GAAG,MAAMR,SAAS,CAAC,QAAD,CAApC;MACAN,WAAW,CAACc,YAAD,CAAX;IAEH;;IAED,eAAeC,YAAf,GACA;MACEF,OAAO,CAACG,GAAR,CAAYjB,QAAZ;MACA,MAAMkB,KAAK,GAAG,OAAd;;MACE,IACA;QACE,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAoC;UAC9DC,MAAM,EAAE,MADsD;UAE9DS,OAAO,EAAE;YACP,gBAAgB;UADT,CAFqD;UAK9DC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;YACnBJ;UADmB,CAAf;QALwD,CAApC,CAA5B;QAUA,MAAMP,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAArB;QACAE,OAAO,CAACG,GAAR,CAAYN,MAAZ;QACA,OAAOA,MAAP;MACD,CAfD,CAgBA,OAAOE,KAAP,EACA;QACIC,OAAO,CAACG,GAAR,CAAY,OAAZ;QACAH,OAAO,CAACD,KAAR,CAAcA,KAAd;MACH;IACJ;;IAEDP,QAAQ;IACRU,YAAY;EAEf,CAtDQ,EAsDN,EAtDM,CAAT;EAuDE,oBACA;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADA;AAGH,C,CAEG;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;;GApIoBjB,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}