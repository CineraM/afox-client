{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ciner\\\\Documents\\\\GitHub\\\\Streaming-Site\\\\WebApp\\\\src\\\\components\\\\list\\\\List.jsx\";\n// import { ArrowBackIos, ArrowForwardIos } from '@material-ui/icons'\n// import { useRef } from 'react';\nimport { ListSharp } from '@material-ui/icons';\nimport Listitem from '../listItem/Listitem';\nimport './list.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function List(props) {\n  // const ref = useRef(null);\n  // const scroll = (scrollOffset) => {\n  //   ref.current.scrollLeft += scrollOffset;\n  // };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"listTitle\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poster_row\",\n      children: props.data.map(lists => {\n        return /*#__PURE__*/_jsxDEV(Listitem, {\n          title: props.data.title,\n          poster: props.data.pic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n} // alternative if I ever figure out how to scroll orizontally on click event\n// <div className='list'>\n//     <span className='listTitle'>Action</span>\n//     <div className=\"wrapper\">\n//       <ArrowBackIos className='left_button'/>\n//       <ArrowForwardIos className='right_button'/>\n//       <div className=\"poster_row\">\n//           <button onClick={() => scroll(20)}> a</button>\n//           <Listitem onClick={() => scroll(-20)}/>\n//           <Listitem/>\n//           <Listitem/>\n//           <Listitem/>\n//           <Listitem/>\n//           <Listitem/>\n//           <Listitem/>\n//           <Listitem/>\n//           <Listitem/>\n//           <Listitem/>\n//           <Listitem/>\n//           <Listitem/>\n//           <Listitem/>\n//           <Listitem/>\n//           <Listitem/>\n//           <Listitem/>\n//       </div>\n//     </div>\n// </div>\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["ListSharp","Listitem","List","props","title","data","map","lists","pic"],"sources":["C:/Users/Ciner/Documents/GitHub/Streaming-Site/WebApp/src/components/list/List.jsx"],"sourcesContent":["\n// import { ArrowBackIos, ArrowForwardIos } from '@material-ui/icons'\n// import { useRef } from 'react';\nimport { ListSharp } from '@material-ui/icons'\nimport Listitem from '../listItem/Listitem'\nimport './list.scss'\n\nexport default function List(props) {\n  \n  // const ref = useRef(null);\n  // const scroll = (scrollOffset) => {\n  //   ref.current.scrollLeft += scrollOffset;\n  // };\n\n  \n  return (\n    <div className='list'>\n      \n        <span className='listTitle'>\n          {props.title}\n        </span>\n        <tbody>\n\n        </tbody>\n\n        <div className=\"poster_row\">\n          \n          {props.data.map(lists => {\n            return (\n                <Listitem title = {props.data.title} poster={props.data.pic}/>\n            )\n          })}\n        </div>\n      \n          {/* <div className=\"poster_row\">\n              <Listitem title = {props.data[0][0]} poster={props.data[0][1]}/>\n              <Listitem title = {props.data[1][0]} poster={props.data[1][1]}/>\n              <Listitem title = {props.data[2][0]} poster={props.data[2][1]}/>\n              <Listitem title = {props.data[3][0]} poster={props.data[3][1]}/>\n              <Listitem title = {props.data[4][0]} poster={props.data[4][1]}/>\n              <Listitem title = {props.data[5][0]} poster={props.data[5][1]}/>\n              <Listitem title = {props.data[6][0]} poster={props.data[6][1]}/>\n              <Listitem title = {props.data[7][0]} poster={props.data[7][1]}/>\n          </div> */}\n    </div>\n  )\n}\n\n// alternative if I ever figure out how to scroll orizontally on click event\n\n    // <div className='list'>\n      \n    //     <span className='listTitle'>Action</span>\n        \n    //     <div className=\"wrapper\">\n    //       <ArrowBackIos className='left_button'/>\n    //       <ArrowForwardIos className='right_button'/>\n    //       <div className=\"poster_row\">\n    //           <button onClick={() => scroll(20)}> a</button>\n    //           <Listitem onClick={() => scroll(-20)}/>\n    //           <Listitem/>\n    //           <Listitem/>\n    //           <Listitem/>\n    //           <Listitem/>\n    //           <Listitem/>\n    //           <Listitem/>\n    //           <Listitem/>\n    //           <Listitem/>\n    //           <Listitem/>\n    //           <Listitem/>\n    //           <Listitem/>\n    //           <Listitem/>\n    //           <Listitem/>\n    //           <Listitem/>\n    //           <Listitem/>\n    //       </div>\n          \n    //     </div>\n\n        \n    // </div>"],"mappings":";AACA;AACA;AACA,SAASA,SAAT,QAA0B,oBAA1B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,aAAP;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAElC;EACA;EACA;EACA;EAGA,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,wBAEI;MAAM,SAAS,EAAC,WAAhB;MAAA,UACGA,KAAK,CAACC;IADT;MAAA;MAAA;MAAA;IAAA,QAFJ,eAKI;MAAA;MAAA;MAAA;IAAA,QALJ,eASI;MAAK,SAAS,EAAC,YAAf;MAAA,UAEGD,KAAK,CAACE,IAAN,CAAWC,GAAX,CAAeC,KAAK,IAAI;QACvB,oBACI,QAAC,QAAD;UAAU,KAAK,EAAIJ,KAAK,CAACE,IAAN,CAAWD,KAA9B;UAAqC,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWG;QAAxD;UAAA;UAAA;UAAA;QAAA,QADJ;MAGD,CAJA;IAFH;MAAA;MAAA;MAAA;IAAA,QATJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA+BD,C,CAED;AAEI;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;;KAzEoBN,I"},"metadata":{},"sourceType":"module"}