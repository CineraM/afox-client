{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ciner\\\\Documents\\\\GitHub\\\\streaming-site\\\\client\\\\src\\\\home\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport Navbar from \"../components/navbar/Navbar\";\nimport Featured from \"../components/featured/Featured\";\nimport \"./home.scss\";\nimport List from \"../components/list/List\";\nimport Footer from \"../components/footer/Footer\";\nimport React, { useState, useEffect } from \"react\";\nimport jwt from 'jwt-decode';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [action, setAction] = useState([]);\n  const [drama, setDrama] = useState([]);\n  const [adventure, setAdventure] = useState([]);\n  const [comedy, setComedy] = useState([]);\n  const [sports, setSports] = useState([]);\n  const [movies, setMovies] = useState([]);\n  const token = localStorage.getItem('token');\n  const admin_token = localStorage.getItem('admin_token');\n  let navigate = useNavigate();\n  useEffect(() => {\n    document.title = \"Ani-Fox\"; // admin validation\n\n    if (admin_token) {\n      // if admin user, remove user token\n      localStorage.removeItem('token');\n      navigate('/admin_dashboard');\n    } // user validation\n\n\n    if (token) {\n      const user = jwt(token);\n\n      if (!user) {\n        localStorage.removeItem('token');\n        navigate('/login');\n      }\n    } else {\n      // console.log('asdasd')\n      localStorage.removeItem('token');\n      navigate('/login');\n    } // Query and store genres\n\n\n    async function getLists() {\n      async function fetchList(list) {\n        // setGenre(list)\n        const genre = list;\n\n        try {\n          const response = await fetch(`https://anifox-cinera.herokuapp.com/api/animeGenres`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              genre\n            })\n          });\n          setLoading(false);\n          const mylist = await response.json();\n          return mylist;\n        } catch (error) {\n          console.error(error);\n        }\n      }\n\n      const actionList = await fetchList(\"Action\");\n      setAction(actionList);\n      const sportsList = await fetchList(\"Sports\");\n      setSports(sportsList);\n      const dramaList = await fetchList(\"Drama\");\n      setDrama(dramaList);\n      const comedyList = await fetchList(\"Comedy\");\n      setComedy(comedyList);\n      const adventureList = await fetchList(\"Adventure\");\n      setAdventure(adventureList);\n      const moviesList = await fetchList(\"Avant Garde\");\n      setMovies(moviesList);\n      return actionList;\n    }\n\n    getLists(); // eslint-disable-next-line\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"anime\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Featured, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        title: \"Action\",\n        data: action,\n        isInAnime: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        title: \"Drama\",\n        data: drama,\n        isInAnime: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        title: \"Adventure\",\n        data: adventure,\n        isInAnime: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        title: \"Comedy\",\n        data: comedy,\n        isInAnime: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        title: \"Sports\",\n        data: sports,\n        isInAnime: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        title: \"Movies\",\n        data: movies,\n        isInAnime: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this);\n  } // return (\n  //   <div className='home'>\n  //     <Navbar/>\n  //     {loading ? \"test\" : <div className=\"loader\"></div>}\n  //     <Featured/>\n  //     <br/>\n  //     <List title=\"Action\" data={action} isInAnime={false}/>\n  //     <List title=\"Drama\" data={drama} isInAnime={false}/>\n  //     <List title=\"Adventure\" data={adventure} isInAnime={false}/>\n  //     <List title=\"Comedy\" data={comedy} isInAnime={false}/>\n  //     <List title=\"Sports\" data={sports} isInAnime={false}/>\n  //     <List title=\"Movies\" data={movies} isInAnime={false}/>\n  //     <br/>\n  //     <Footer/>\n  //   </div>\n  // )\n\n};\n\n_s(Home, \"cT9L+7jxPYMM7Tyo3Z2loNY3s2s=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Home;\nexport default Home; // async function fetchList(list) \n// {\n//     try {\n//         const response = await fetch(`https://anifox-cinera.herokuapp.com/api/${list}`, {\n//             method: 'GET'\n//         });\n//         const mylist = await response.json();\n//         return mylist;\n//     } \n//     catch (error) {console.error(error);}\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Navbar","Featured","List","Footer","React","useState","useEffect","jwt","useNavigate","Home","loading","setLoading","action","setAction","drama","setDrama","adventure","setAdventure","comedy","setComedy","sports","setSports","movies","setMovies","token","localStorage","getItem","admin_token","navigate","document","title","removeItem","user","getLists","fetchList","list","genre","response","fetch","method","headers","body","JSON","stringify","mylist","json","error","console","actionList","sportsList","dramaList","comedyList","adventureList","moviesList"],"sources":["C:/Users/Ciner/Documents/GitHub/streaming-site/client/src/home/Home.jsx"],"sourcesContent":["import Navbar from \"../components/navbar/Navbar\"\r\nimport Featured from \"../components/featured/Featured\"\r\nimport \"./home.scss\"\r\nimport List from \"../components/list/List\"\r\nimport Footer from \"../components/footer/Footer\"\r\nimport React, { useState, useEffect } from \"react\";\r\nimport jwt from 'jwt-decode'\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nconst Home = () => {\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const [action, setAction] = useState([])\r\n  const [drama, setDrama] = useState([])\r\n  const [adventure, setAdventure] = useState([])\r\n  const [comedy, setComedy] = useState([])\r\n  const [sports, setSports] = useState([])\r\n  const [movies, setMovies] = useState([])\r\n\r\n  const token = localStorage.getItem('token')\r\n  const admin_token = localStorage.getItem('admin_token')\r\n\r\n  let navigate = useNavigate();\r\n  \r\n  useEffect(() => {\r\n    document.title = \"Ani-Fox\"\r\n\r\n    // admin validation\r\n    if (admin_token) {\r\n      // if admin user, remove user token\r\n      localStorage.removeItem('token')\r\n      navigate('/admin_dashboard')\r\n    }\r\n\r\n    // user validation\r\n    if (token) {\r\n      const user = jwt(token)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate('/login')\r\n      }\r\n    }\r\n    else\r\n    {\r\n      // console.log('asdasd')\r\n      localStorage.removeItem('token')\r\n      navigate('/login')\r\n    }\r\n\r\n    // Query and store genres\r\n      async function getLists() \r\n      {\r\n        async function fetchList(list) \r\n        {\r\n          // setGenre(list)\r\n          const genre = list\r\n            try {\r\n                const response = await fetch(`https://anifox-cinera.herokuapp.com/api/animeGenres`, {\r\n                  method: 'POST',\r\n                  headers: {\r\n                    'Content-Type': 'application/json',\r\n                  },\r\n                  body: JSON.stringify({\r\n                    genre,\r\n                  }),\r\n                });\r\n                setLoading(false)\r\n                const mylist = await response.json();\r\n                return mylist;\r\n            } \r\n            catch (error) {console.error(error);}\r\n        }\r\n        \r\n          const actionList = await fetchList(\"Action\");\r\n          setAction(actionList);\r\n\r\n          const sportsList = await fetchList(\"Sports\");\r\n          setSports(sportsList)\r\n\r\n          const dramaList = await fetchList(\"Drama\");\r\n          setDrama(dramaList);\r\n\r\n          const comedyList = await fetchList(\"Comedy\");\r\n          setComedy(comedyList);\r\n\r\n          const adventureList = await fetchList(\"Adventure\");\r\n          setAdventure(adventureList);\r\n\r\n          const moviesList = await fetchList(\"Avant Garde\");\r\n          setMovies(moviesList);\r\n\r\n          return actionList; \r\n      }\r\n\r\n      getLists()\r\n      // eslint-disable-next-line\r\n  }, [])\r\n\r\n  if(loading)\r\n  {\r\n      return (\r\n          <div className=\"anime\">        \r\n            <div className=\"loader\"></div>\r\n          </div> \r\n  )\r\n  }\r\n  else\r\n  {\r\n      return (\r\n    <div className='home'>\r\n\r\n      <Navbar/>\r\n      <Featured/>\r\n      <br/>\r\n      <List title=\"Action\" data={action} isInAnime={false}/>\r\n      <List title=\"Drama\" data={drama} isInAnime={false}/>\r\n      <List title=\"Adventure\" data={adventure} isInAnime={false}/>\r\n      <List title=\"Comedy\" data={comedy} isInAnime={false}/>\r\n      <List title=\"Sports\" data={sports} isInAnime={false}/>\r\n      <List title=\"Movies\" data={movies} isInAnime={false}/>\r\n      <br/>\r\n      \r\n      <Footer/>\r\n      \r\n    </div>\r\n  )\r\n  }\r\n\r\n  // return (\r\n  //   <div className='home'>\r\n\r\n  //     <Navbar/>\r\n  //     {loading ? \"test\" : <div className=\"loader\"></div>}\r\n      \r\n  //     <Featured/>\r\n\r\n  //     <br/>\r\n  //     <List title=\"Action\" data={action} isInAnime={false}/>\r\n  //     <List title=\"Drama\" data={drama} isInAnime={false}/>\r\n  //     <List title=\"Adventure\" data={adventure} isInAnime={false}/>\r\n  //     <List title=\"Comedy\" data={comedy} isInAnime={false}/>\r\n  //     <List title=\"Sports\" data={sports} isInAnime={false}/>\r\n  //     <List title=\"Movies\" data={movies} isInAnime={false}/>\r\n  //     <br/>\r\n      \r\n  //     <Footer/>\r\n      \r\n  //   </div>\r\n  // )\r\n\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n\r\n        // async function fetchList(list) \r\n        // {\r\n        //     try {\r\n        //         const response = await fetch(`https://anifox-cinera.herokuapp.com/api/${list}`, {\r\n        //             method: 'GET'\r\n        //         });\r\n        //         const mylist = await response.json();\r\n        //         return mylist;\r\n        //     } \r\n        //     catch (error) {console.error(error);}\r\n        // }"],"mappings":"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"},"metadata":{},"sourceType":"module"}