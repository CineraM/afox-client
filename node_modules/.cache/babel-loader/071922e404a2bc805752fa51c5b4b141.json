{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ciner\\\\Documents\\\\GitHub\\\\Streaming-Site\\\\src\\\\components\\\\list\\\\List.jsx\",\n    _s = $RefreshSig$();\n\nimport { ArrowLeftOutlined, ArrowRightOutlined } from '@material-ui/icons';\nimport { useRef, useState } from 'react';\nimport Listitem from '../listItem/Listitem';\nimport './list.scss'; // export default function List() {\n//     // // probably better to use a library --> look into this later\n//     // const[isMoved, setIsMoved] = useState(false)\n//     // const[slideNumber, SetSlideNumber] = useState(0)            // slider index\n//     // const[leftClicked, setLeftClicked] = useState(\"left\")   // dont allow clicks until animation is done\n//     // const[rightClicked, setrightClicked] = useState(\"right\")\n//     // const slider_size = 4    // hardcoded change later\n//     const listRef = useRef() // react element\n//     // const handleClick = (direction) => {\n//     //     if(direction === \"None\")\n//     //         return;\n//     //     setIsMoved(true)\n//     //     setLeftClicked(\"None\")\n//     //     let distance  = listRef.current.getBoundingClientRect().x - 50\n//     //     if(direction === \"left\" && slideNumber > 0)\n//     //     {\n//     //         listRef.current.style.transform = `translateX(${325+distance}px)`\n//     //         SetSlideNumber(slideNumber-1)\n//     //     } \n//     //     if(direction === \"right\" && slideNumber < slider_size)\n//     //     {\n//     //         listRef.current.style.transform = `translateX(${-325+distance}px)`\n//     //         SetSlideNumber(slideNumber+1)\n//     //     }\n//     //     setTimeout(() => console.log('Initial timeout!'), 5000);\n//     //     setLeftClicked(\"left\")\n//     // }\n//   return (\n//     <div className='list'>\n//         <span className='listTitle'>Continue to Watch</span>\n//         <div className=\"wrapper\">\n//             {/* <ArrowLeftOutlined \n//                 className='slider left'\n//                 // onClick={()=>handleClick(leftClicked)}\n//                 // style={{display: !isMoved && \"none\"}}\n//             /> */}\n//             <div className='container' ref={listRef}>\n//                 <Listitem/>\n//                 <Listitem/>\n//                 <Listitem/>\n//                 <Listitem/>\n//                 <Listitem/>\n//                 <Listitem/>\n//                 <Listitem/>\n//                 <Listitem/>\n//                 <Listitem/>\n//                 <Listitem/>\n//             </div>\n//             {/* <ArrowRightOutlined \n//                 className='slider right'\n//                 // onClick={()=>handleClick(\"right\")}\n//             /> */}\n//         </div>\n//     </div>\n//   )\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function List() {\n  _s();\n\n  const listRef = useRef(); // react element\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"listTitle\",\n      children: \"Continue to Watch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poster_row\",\n      children: [/*#__PURE__*/_jsxDEV(Listitem, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Listitem, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Listitem, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Listitem, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Listitem, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Listitem, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Listitem, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Listitem, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Listitem, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Listitem, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"LnJq3hyIKJKW/5OekoktqVZlopg=\");\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["C:/Users/Ciner/Documents/GitHub/Streaming-Site/src/components/list/List.jsx"],"names":["ArrowLeftOutlined","ArrowRightOutlined","useRef","useState","Listitem","List","listRef"],"mappings":";;;AAAA,SAASA,iBAAT,EAA4BC,kBAA5B,QAAsD,oBAAtD;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,aAAP,C,CAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAMC,OAAO,GAAGJ,MAAM,EAAtB,CAD2B,CACF;;AAE3B,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cARJ,eASI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GArBuBG,I;;KAAAA,I","sourcesContent":["import { ArrowLeftOutlined, ArrowRightOutlined } from '@material-ui/icons'\r\nimport { useRef, useState } from 'react'\r\nimport Listitem from '../listItem/Listitem'\r\nimport './list.scss'\r\n\r\n\r\n// export default function List() {\r\n\r\n//     // // probably better to use a library --> look into this later\r\n//     // const[isMoved, setIsMoved] = useState(false)\r\n//     // const[slideNumber, SetSlideNumber] = useState(0)            // slider index\r\n//     // const[leftClicked, setLeftClicked] = useState(\"left\")   // dont allow clicks until animation is done\r\n//     // const[rightClicked, setrightClicked] = useState(\"right\")\r\n\r\n//     // const slider_size = 4    // hardcoded change later\r\n\r\n//     const listRef = useRef() // react element\r\n\r\n\r\n//     // const handleClick = (direction) => {\r\n\r\n//     //     if(direction === \"None\")\r\n//     //         return;\r\n        \r\n//     //     setIsMoved(true)\r\n//     //     setLeftClicked(\"None\")\r\n\r\n//     //     let distance  = listRef.current.getBoundingClientRect().x - 50\r\n//     //     if(direction === \"left\" && slideNumber > 0)\r\n//     //     {\r\n//     //         listRef.current.style.transform = `translateX(${325+distance}px)`\r\n//     //         SetSlideNumber(slideNumber-1)\r\n//     //     } \r\n            \r\n//     //     if(direction === \"right\" && slideNumber < slider_size)\r\n//     //     {\r\n//     //         listRef.current.style.transform = `translateX(${-325+distance}px)`\r\n//     //         SetSlideNumber(slideNumber+1)\r\n//     //     }\r\n\r\n//     //     setTimeout(() => console.log('Initial timeout!'), 5000);\r\n//     //     setLeftClicked(\"left\")\r\n//     // }\r\n\r\n//   return (\r\n//     <div className='list'>\r\n//         <span className='listTitle'>Continue to Watch</span>\r\n//         <div className=\"wrapper\">\r\n//             {/* <ArrowLeftOutlined \r\n//                 className='slider left'\r\n//                 // onClick={()=>handleClick(leftClicked)}\r\n//                 // style={{display: !isMoved && \"none\"}}\r\n//             /> */}\r\n//             <div className='container' ref={listRef}>\r\n//                 <Listitem/>\r\n//                 <Listitem/>\r\n//                 <Listitem/>\r\n//                 <Listitem/>\r\n//                 <Listitem/>\r\n//                 <Listitem/>\r\n//                 <Listitem/>\r\n//                 <Listitem/>\r\n//                 <Listitem/>\r\n//                 <Listitem/>\r\n//             </div>\r\n//             {/* <ArrowRightOutlined \r\n//                 className='slider right'\r\n//                 // onClick={()=>handleClick(\"right\")}\r\n//             /> */}\r\n//         </div>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\n\r\nexport default function List() {\r\n    const listRef = useRef() // react element\r\n\r\n  return (\r\n    <div className='list'>\r\n        <span className='listTitle'>Continue to Watch</span>\r\n        <div className=\"poster_row\">\r\n            <Listitem/>\r\n            <Listitem/>\r\n            <Listitem/>\r\n            <Listitem/>\r\n            <Listitem/>\r\n            <Listitem/>\r\n            <Listitem/>\r\n            <Listitem/>\r\n            <Listitem/>\r\n            <Listitem/>\r\n            \r\n        </div>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}