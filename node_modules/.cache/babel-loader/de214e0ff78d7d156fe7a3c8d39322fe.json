{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ciner\\\\Documents\\\\GitHub\\\\Streaming-Site\\\\WebApp\\\\src\\\\admindash\\\\Admindash.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./admindash.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Admindash() {\n  _s();\n\n  const [action, setAction] = useState([]);\n  const [drama, setDrama] = useState([]);\n  const [adventure, setAdventure] = useState([]);\n  const [comedy, setComedy] = useState([]);\n  const [sports, setSports] = useState([]);\n  const [movies, setMovies] = useState([]);\n  let navigate = useNavigate();\n  useEffect(() => {\n    document.title = \"Ani-Fox\"; // user validation\n\n    if (token) {\n      const user = jwt(token);\n\n      if (!user) {\n        // console.log('jkhg')\n        localStorage.removeItem('token');\n        navigate('/login');\n      }\n    } else {\n      // console.log('asdasd')\n      localStorage.removeItem('token');\n      navigate('/login');\n    } // Query and store genres\n\n\n    async function getLists() {\n      async function fetchList(list) {\n        // setGenre(list)\n        const genre = list;\n\n        try {\n          const response = await fetch(`http://localhost:1337/api/animeGenres`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              genre\n            })\n          });\n          const mylist = await response.json(); // console.log(mylist)\n\n          return mylist;\n        } catch (error) {\n          console.error(error);\n        }\n      }\n\n      const actionList = await fetchList(\"Action\");\n      setAction(actionList);\n      const sportsList = await fetchList(\"Sports\");\n      setSports(sportsList);\n      const dramaList = await fetchList(\"Drama\");\n      setDrama(dramaList);\n      const comedyList = await fetchList(\"Comedy\");\n      setComedy(comedyList);\n      const adventureList = await fetchList(\"Adventure\");\n      setAdventure(adventureList);\n      const moviesList = await fetchList(\"Avant Garde\");\n      setMovies(moviesList);\n      return actionList;\n    }\n\n    getLists(); // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Admindash, \"HhK+Wzn9lZxaGVwZKJaWXwF8Tgw=\", true);\n\n_c = Admindash;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admindash\");","map":{"version":3,"names":["React","Admindash","action","setAction","useState","drama","setDrama","adventure","setAdventure","comedy","setComedy","sports","setSports","movies","setMovies","navigate","useNavigate","useEffect","document","title","token","user","jwt","localStorage","removeItem","getLists","fetchList","list","genre","response","fetch","method","headers","body","JSON","stringify","mylist","json","error","console","actionList","sportsList","dramaList","comedyList","adventureList","moviesList"],"sources":["C:/Users/Ciner/Documents/GitHub/Streaming-Site/WebApp/src/admindash/Admindash.jsx"],"sourcesContent":["import React from 'react'\r\nimport \"./admindash.scss\"\r\n\r\nexport default function Admindash() {\r\n\r\n    const [action, setAction] = useState([])\r\n    const [drama, setDrama] = useState([])\r\n    const [adventure, setAdventure] = useState([])\r\n    const [comedy, setComedy] = useState([])\r\n    const [sports, setSports] = useState([])\r\n    const [movies, setMovies] = useState([])\r\n\r\n    \r\n    let navigate = useNavigate();\r\n    \r\n    useEffect(() => {\r\n        document.title = \"Ani-Fox\"\r\n        // user validation\r\n        if (token) {\r\n        const user = jwt(token)\r\n        if (!user) {\r\n            // console.log('jkhg')\r\n            localStorage.removeItem('token')\r\n            navigate('/login')\r\n        }\r\n        }\r\n        else\r\n        {\r\n        // console.log('asdasd')\r\n        localStorage.removeItem('token')\r\n        navigate('/login')\r\n        }\r\n    \r\n        // Query and store genres\r\n        async function getLists() \r\n        {\r\n            async function fetchList(list) \r\n            {\r\n            // setGenre(list)\r\n            const genre = list\r\n                try {\r\n                    const response = await fetch(`http://localhost:1337/api/animeGenres`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        genre,\r\n                    }),\r\n                    });\r\n                    const mylist = await response.json();\r\n                    // console.log(mylist)\r\n                    return mylist;\r\n                } \r\n                catch (error) {console.error(error);}\r\n            }\r\n            \r\n            const actionList = await fetchList(\"Action\");\r\n            setAction(actionList);\r\n    \r\n            const sportsList = await fetchList(\"Sports\");\r\n            setSports(sportsList)\r\n    \r\n            const dramaList = await fetchList(\"Drama\");\r\n            setDrama(dramaList);\r\n    \r\n            const comedyList = await fetchList(\"Comedy\");\r\n            setComedy(comedyList);\r\n    \r\n            const adventureList = await fetchList(\"Adventure\");\r\n            setAdventure(adventureList);\r\n    \r\n            const moviesList = await fetchList(\"Avant Garde\");\r\n            setMovies(moviesList);\r\n    \r\n            return actionList; \r\n        }\r\n    \r\n        getLists()\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n    \r\n    <div className='admin'>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;;AAEA,eAAe,SAASC,SAAT,GAAqB;EAAA;;EAEhC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBF,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;EAGA,IAAIW,QAAQ,GAAGC,WAAW,EAA1B;EAEAC,SAAS,CAAC,MAAM;IACZC,QAAQ,CAACC,KAAT,GAAiB,SAAjB,CADY,CAEZ;;IACA,IAAIC,KAAJ,EAAW;MACX,MAAMC,IAAI,GAAGC,GAAG,CAACF,KAAD,CAAhB;;MACA,IAAI,CAACC,IAAL,EAAW;QACP;QACAE,YAAY,CAACC,UAAb,CAAwB,OAAxB;QACAT,QAAQ,CAAC,QAAD,CAAR;MACH;IACA,CAPD,MASA;MACA;MACAQ,YAAY,CAACC,UAAb,CAAwB,OAAxB;MACAT,QAAQ,CAAC,QAAD,CAAR;IACC,CAhBW,CAkBZ;;;IACA,eAAeU,QAAf,GACA;MACI,eAAeC,SAAf,CAAyBC,IAAzB,EACA;QACA;QACA,MAAMC,KAAK,GAAGD,IAAd;;QACI,IAAI;UACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,uCAAF,EAA0C;YACtEC,MAAM,EAAE,MAD8D;YAEtEC,OAAO,EAAE;cACL,gBAAgB;YADX,CAF6D;YAKtEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;cACjBP;YADiB,CAAf;UALgE,CAA1C,CAA5B;UASA,MAAMQ,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAArB,CAVA,CAWA;;UACA,OAAOD,MAAP;QACH,CAbD,CAcA,OAAOE,KAAP,EAAc;UAACC,OAAO,CAACD,KAAR,CAAcA,KAAd;QAAsB;MACxC;;MAED,MAAME,UAAU,GAAG,MAAMd,SAAS,CAAC,QAAD,CAAlC;MACAvB,SAAS,CAACqC,UAAD,CAAT;MAEA,MAAMC,UAAU,GAAG,MAAMf,SAAS,CAAC,QAAD,CAAlC;MACAd,SAAS,CAAC6B,UAAD,CAAT;MAEA,MAAMC,SAAS,GAAG,MAAMhB,SAAS,CAAC,OAAD,CAAjC;MACApB,QAAQ,CAACoC,SAAD,CAAR;MAEA,MAAMC,UAAU,GAAG,MAAMjB,SAAS,CAAC,QAAD,CAAlC;MACAhB,SAAS,CAACiC,UAAD,CAAT;MAEA,MAAMC,aAAa,GAAG,MAAMlB,SAAS,CAAC,WAAD,CAArC;MACAlB,YAAY,CAACoC,aAAD,CAAZ;MAEA,MAAMC,UAAU,GAAG,MAAMnB,SAAS,CAAC,aAAD,CAAlC;MACAZ,SAAS,CAAC+B,UAAD,CAAT;MAEA,OAAOL,UAAP;IACH;;IAEDf,QAAQ,GA/DI,CAgEZ;EACH,CAjEQ,EAiEN,EAjEM,CAAT;EAmEA,oBAEA;IAAK,SAAS,EAAC;EAAf;IAAA;IAAA;IAAA;EAAA,QAFA;AAOH;;GAtFuBxB,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}