{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ciner\\\\Documents\\\\GitHub\\\\Streaming-Site\\\\WebApp\\\\src\\\\settings\\\\Settings.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Settings() {\n  _s();\n\n  const [action, setAction] = useState([]);\n  const [genre, setGenre] = useState('');\n  useEffect(() => {\n    // Query and store genres\n    async function getLists() {\n      async function fetchList(list) {\n        setGenre(list);\n\n        try {\n          const response = await fetch(`http://localhost:1337/api/animeGenres`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              genre\n            })\n          });\n          const mylist = await response.json();\n          console.log(mylist);\n          return mylist;\n        } catch (error) {\n          console.error(error);\n        }\n      }\n\n      const actionList = await fetchList(\"action\");\n      setAction(actionList);\n      return actionList;\n    }\n\n    getLists(); // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"fuck this \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n} // const [action, setAction] = useState([])\n// const [drama, setDrama] = useState([])\n// const [adventure, setAdventure] = useState([])\n// const [comedy, setComedy] = useState([])\n// const [sports, setSports] = useState([])\n// const [movies, setMovies] = useState([])\n// async function fetchList() \n// {\n//     try \n//     {\n//         const response = await fetch(`http://localhost:1337/api/action`, \n//         {\n//             method: 'GET'\n//         });\n//         const mylist = await response.json();\n//         return mylist;\n//     } \n//     catch (error) \n//     {\n//         console.error(error);\n//     }\n// }\n// useEffect(() => {\n//     async function getList() \n//     {\n//         const mylist = await fetchList();\n//         setAction(mylist);\n//         return mylist; \n//     }\n//     getList()\n// }, [action])\n// console.log(action)\n// fetch('http://localhost:1337/api/action')\n//     .then(res => res.json())\n//     .then(data => console.log(data))\n//     .catch(error => console.log('ERROR'))\n// async function fetchList() \n// {\n//     try \n//     {\n//         const response = await fetch(`http://localhost:1337/api/action`, \n//         {\n//             method: 'GET'\n//         });\n//         const mylist = await response.json();\n//         return mylist;\n//     } \n//     catch (error) \n//     {\n//         console.error(error);\n//     }\n// }\n// async function getList() \n// {\n//     const mylist = await fetchList();\n//     return mylist \n// }\n// console.log(action)\n\n_s(Settings, \"KX5RijO8yvoWI7ChZjxGLOraEeI=\");\n\n_c = Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useEffect","useState","Settings","action","setAction","genre","setGenre","getLists","fetchList","list","response","fetch","method","headers","body","JSON","stringify","mylist","json","console","log","error","actionList"],"sources":["C:/Users/Ciner/Documents/GitHub/Streaming-Site/WebApp/src/settings/Settings.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\nexport default function Settings() {\r\n\r\n  const [action, setAction] = useState([])\r\n  const [genre, setGenre] = useState('')\r\n\r\n  useEffect(() => {\r\n\r\n    // Query and store genres\r\n      async function getLists() \r\n      {\r\n\r\n        async function fetchList(list) \r\n        {\r\n          setGenre(list)\r\n            try {\r\n                const response = await fetch(`http://localhost:1337/api/animeGenres`, {\r\n                  method: 'POST',\r\n                  headers: {\r\n                    'Content-Type': 'application/json',\r\n                  },\r\n                  body: JSON.stringify({\r\n                    genre,\r\n                  }),\r\n                });\r\n                const mylist = await response.json();\r\n                console.log(mylist)\r\n                return mylist;\r\n            } \r\n            catch (error) {console.error(error);}\r\n        }\r\n        \r\n          const actionList = await fetchList(\"action\");\r\n          setAction(actionList);\r\n\r\n          return actionList; \r\n      }\r\n\r\n      getLists()\r\n      // eslint-disable-next-line\r\n  }, [])\r\n    return (\r\n    <h1>fuck this </h1>\r\n  )\r\n}\r\n\r\n    // const [action, setAction] = useState([])\r\n    // const [drama, setDrama] = useState([])\r\n    // const [adventure, setAdventure] = useState([])\r\n    // const [comedy, setComedy] = useState([])\r\n    // const [sports, setSports] = useState([])\r\n    // const [movies, setMovies] = useState([])\r\n\r\n    // async function fetchList() \r\n    // {\r\n    //     try \r\n    //     {\r\n    //         const response = await fetch(`http://localhost:1337/api/action`, \r\n    //         {\r\n    //             method: 'GET'\r\n    //         });\r\n    //         const mylist = await response.json();\r\n    //         return mylist;\r\n    //     } \r\n    //     catch (error) \r\n    //     {\r\n    //         console.error(error);\r\n    //     }\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     async function getList() \r\n    //     {\r\n    //         const mylist = await fetchList();\r\n    //         setAction(mylist);\r\n    //         return mylist; \r\n    //     }\r\n\r\n    //     getList()\r\n    // }, [action])\r\n\r\n    // console.log(action)\r\n\r\n    // fetch('http://localhost:1337/api/action')\r\n    //     .then(res => res.json())\r\n    //     .then(data => console.log(data))\r\n    //     .catch(error => console.log('ERROR'))\r\n\r\n    // async function fetchList() \r\n    // {\r\n    //     try \r\n    //     {\r\n    //         const response = await fetch(`http://localhost:1337/api/action`, \r\n    //         {\r\n    //             method: 'GET'\r\n    //         });\r\n    //         const mylist = await response.json();\r\n    //         return mylist;\r\n    //     } \r\n    //     catch (error) \r\n    //     {\r\n    //         console.error(error);\r\n    //     }\r\n    // }\r\n\r\n    // async function getList() \r\n    // {\r\n    //     const mylist = await fetchList();\r\n    //     return mylist \r\n    // }\r\n\r\n    \r\n    // console.log(action)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAIA,eAAe,SAASC,QAAT,GAAoB;EAAA;;EAEjC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;EAEAD,SAAS,CAAC,MAAM;IAEd;IACE,eAAeO,QAAf,GACA;MAEE,eAAeC,SAAf,CAAyBC,IAAzB,EACA;QACEH,QAAQ,CAACG,IAAD,CAAR;;QACE,IAAI;UACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,uCAAF,EAA0C;YACpEC,MAAM,EAAE,MAD4D;YAEpEC,OAAO,EAAE;cACP,gBAAgB;YADT,CAF2D;YAKpEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;cACnBX;YADmB,CAAf;UAL8D,CAA1C,CAA5B;UASA,MAAMY,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAArB;UACAC,OAAO,CAACC,GAAR,CAAYH,MAAZ;UACA,OAAOA,MAAP;QACH,CAbD,CAcA,OAAOI,KAAP,EAAc;UAACF,OAAO,CAACE,KAAR,CAAcA,KAAd;QAAsB;MACxC;;MAEC,MAAMC,UAAU,GAAG,MAAMd,SAAS,CAAC,QAAD,CAAlC;MACAJ,SAAS,CAACkB,UAAD,CAAT;MAEA,OAAOA,UAAP;IACH;;IAEDf,QAAQ,GAhCI,CAiCZ;EACH,CAlCQ,EAkCN,EAlCM,CAAT;EAmCE,oBACA;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADA;AAGH,C,CAEG;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;;GA/GoBL,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}